// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using UniverBD_v2;

#nullable disable

namespace UniverBD_v2.Migrations
{
    [DbContext(typeof(UniversityContext))]
    [Migration("20230220194101_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseCollation("utf8mb4_0900_ai_ci")
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.HasCharSet(modelBuilder, "utf8mb4");

            modelBuilder.Entity("Teacherdiscipline", b =>
                {
                    b.Property<int>("TeacherId")
                        .HasColumnType("int")
                        .HasColumnName("teacherId");

                    b.Property<string>("DisciplineId")
                        .HasMaxLength(5)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("disciplineId");

                    b.HasKey("TeacherId", "DisciplineId")
                        .HasName("PRIMARY")
                        .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

                    b.HasIndex(new[] { "DisciplineId" }, "disciplineId");

                    b.ToTable("teacherdisciplines", (string)null);
                });

            modelBuilder.Entity("UniverBD_v2.Discipline", b =>
                {
                    b.Property<string>("DisciplineId")
                        .HasMaxLength(5)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("disciplineId");

                    b.Property<string>("DisciplineName")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("varchar(60)")
                        .HasColumnName("disciplineName");

                    b.HasKey("DisciplineId")
                        .HasName("PRIMARY");

                    b.ToTable("disciplines", (string)null);
                });

            modelBuilder.Entity("UniverBD_v2.Student", b =>
                {
                    b.Property<int>("StudentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("studentId");

                    b.Property<DateOnly?>("BirthDate")
                        .HasColumnType("date")
                        .HasColumnName("birthDate");

                    b.Property<string>("GroupId")
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("groupId");

                    b.Property<string>("StudentName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("studentName");

                    b.HasKey("StudentId")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "GroupId" }, "groupId");

                    b.ToTable("students", (string)null);
                });

            modelBuilder.Entity("UniverBD_v2.Studentgroup", b =>
                {
                    b.Property<string>("GroupId")
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("groupId");

                    b.Property<string>("Specialization")
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)")
                        .HasColumnName("specialization");

                    b.Property<int?>("TeacherId")
                        .HasColumnType("int")
                        .HasColumnName("teacherId");

                    b.Property<int?>("YearNum")
                        .HasColumnType("int")
                        .HasColumnName("yearNum");

                    b.HasKey("GroupId")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "TeacherId" }, "teacherId");

                    b.ToTable("studentgroups", (string)null);
                });

            modelBuilder.Entity("UniverBD_v2.Teacher", b =>
                {
                    b.Property<int>("TeacherId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("teacherId");

                    b.Property<string>("TeacherName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("teacherName");

                    b.HasKey("TeacherId")
                        .HasName("PRIMARY");

                    b.ToTable("teachers", (string)null);
                });

            modelBuilder.Entity("UniverBD_v2.WeekShedule", b =>
                {
                    b.Property<int>("DayNum")
                        .HasColumnType("int")
                        .HasColumnName("dayNum");

                    b.Property<int>("Lesson")
                        .HasColumnType("int")
                        .HasColumnName("lesson");

                    b.Property<string>("DisciplineId")
                        .HasMaxLength(5)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("disciplineId");

                    b.Property<string>("GroupId")
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("groupId");

                    b.Property<int?>("TeacherId")
                        .HasColumnType("int")
                        .HasColumnName("teacherId");

                    b.HasKey("DayNum", "Lesson")
                        .HasName("PRIMARY")
                        .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

                    b.HasIndex(new[] { "GroupId" }, "week_shedule_FK");

                    b.HasIndex(new[] { "DisciplineId" }, "week_shedule_FK_1");

                    b.HasIndex(new[] { "TeacherId" }, "week_shedule_FK_2");

                    b.ToTable("week_shedule", (string)null);
                });

            modelBuilder.Entity("Teacherdiscipline", b =>
                {
                    b.HasOne("UniverBD_v2.Discipline", null)
                        .WithMany()
                        .HasForeignKey("DisciplineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("teacherdisciplines_ibfk_2");

                    b.HasOne("UniverBD_v2.Teacher", null)
                        .WithMany()
                        .HasForeignKey("TeacherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("teacherdisciplines_ibfk_1");
                });

            modelBuilder.Entity("UniverBD_v2.Student", b =>
                {
                    b.HasOne("UniverBD_v2.Studentgroup", "Group")
                        .WithMany("Students")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("students_ibfk_1");

                    b.Navigation("Group");
                });

            modelBuilder.Entity("UniverBD_v2.Studentgroup", b =>
                {
                    b.HasOne("UniverBD_v2.Teacher", "Teacher")
                        .WithMany("Studentgroups")
                        .HasForeignKey("TeacherId")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("studentgroups_ibfk_1");

                    b.Navigation("Teacher");
                });

            modelBuilder.Entity("UniverBD_v2.WeekShedule", b =>
                {
                    b.HasOne("UniverBD_v2.Discipline", "Discipline")
                        .WithMany("WeekShedules")
                        .HasForeignKey("DisciplineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("week_shedule_FK_1");

                    b.HasOne("UniverBD_v2.Studentgroup", "Group")
                        .WithMany("WeekShedules")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("week_shedule_FK");

                    b.HasOne("UniverBD_v2.Teacher", "Teacher")
                        .WithMany("WeekShedules")
                        .HasForeignKey("TeacherId")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("week_shedule_FK_2");

                    b.Navigation("Discipline");

                    b.Navigation("Group");

                    b.Navigation("Teacher");
                });

            modelBuilder.Entity("UniverBD_v2.Discipline", b =>
                {
                    b.Navigation("WeekShedules");
                });

            modelBuilder.Entity("UniverBD_v2.Studentgroup", b =>
                {
                    b.Navigation("Students");

                    b.Navigation("WeekShedules");
                });

            modelBuilder.Entity("UniverBD_v2.Teacher", b =>
                {
                    b.Navigation("Studentgroups");

                    b.Navigation("WeekShedules");
                });
#pragma warning restore 612, 618
        }
    }
}
